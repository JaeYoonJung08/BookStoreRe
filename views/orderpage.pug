doctype html
html
  head
    title Order Page
    style.
      table {
        width: 50%;
        border-collapse: collapse;
        margin-right: 20px;
      }
      th, td {
        border: 1px solid #ddd;
        padding: 8px;
      }
      th {
        background-color: #f2f2f2;
        text-align: left;
      }
    body 
      a(href="/" style="margin-bottom: 10px;") 메인화면 돌아가기
      form(action="/orderpage/add", method="POST")
        h2 주문 목록
        table
          thead 
            tr
              th 책 ID 
              th 책 이름
              th 가격
              th 수량
          tbody 
            each book in selectedBookList
              tr
                td= book.book_id
                td= book.book_name
                td= book.book_price
                td= book.book_count
        h2 주문 총액: #{all_price} 원
        h3 배송지 정보
        if UserAddr.length
          select(name="selectedAddress")
            each addr in UserAddr
              option(value=addr.addr_id)= `${addr.basic_add} ${addr.detail_add} ${addr.postal_code}`
        else
          p 배송지 정보가 없습니다.
        h3 카드 정보
        if UserCard.length
          select(name="selectedCard")
            each card in UserCard
              option(value=card.card_id)= `${card.type_card} 카드 - ${card.card_number} (유효기간: ${card.expriation_time})`
        else
          p 카드 정보가 없습니다.
        h3 적립금 정보
        if point.length
          select(name="selectedPoint")
            each card in point
              - const maxPoints = Math.floor(card.point / 1000) * 1000; // 1000 단위로 최대 포인트 계산
              each i in Array.from({ length: maxPoints / 1000 }, (_, idx) => (idx + 1) * 1000)
                option(value=i)= `${i} 포인트 (사용 가능한 최대: ${maxPoints})`
        else
          p 포인트가 없습니다.
        input(type="hidden", name="totalPrice", value=all_price)
        input(type="hidden", name="selectedBookList", value=selectedBookList)
        button(type="submit") 주문하기
      